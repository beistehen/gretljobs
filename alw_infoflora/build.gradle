import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import java.nio.file.Files
import de.undercouch.gradle.tasks.download.Download
import groovy.json.JsonSlurper



apply plugin: "de.undercouch.download"
apply plugin: 'ch.so.agi.gretl'


defaultTasks 'csvimport'

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
def pathToDataZip = Paths.get(pathToTempFolder, 'neophyten.gz')
def csvFilePath = Paths.get(pathToUnzipFolder.toString(), 'data', 'data.csv')


ext.filepath = 'foo'
ext.filename = 'bar'
ext.fileid = 'nobody'

task download_json(type: Download){
    description = "Download Json with filename"
    doLast {
        def inputFile = new File(pathToTempFolder + "/filenames.json")
        def json = new JsonSlurper().parseText(inputFile.text)
        println "There is/are " + json.data.size() + " files in the JSON"
        project.filename = json.data.file_name[0]
        project.filepath = json.data.folder_name[0]
        project.fileid = json.data.id[0]
        println "Filename 0 = " + filename
    }
    src 'https://obs.infoflora.ch/rest/v4/docs.json?projects=83505'
    username infofloraUser
    password infofloraPwd
    dest new File(pathToTempFolder, 'filenames.json')
    overwrite true
}

task download_file(dependsOn: download_json){
    description = "Download Zip file"

    def localFileName = 'foo' 
    def localPath = '/bar'
    def url = 'https://obs.infoflora.ch/'

    doFirst {
        localFileName = project.filename
        localPath = project.filepath
        url = 'https://obs.infoflora.ch' + localPath + '/' + localFileName        
    }
    doLast {
        download {
            src url
            dest file(pathToDataZip)
            overwrite true
        }
        println "FileSize = " + file(pathToDataZip).size()
    }
}

task unpackFiles(dependsOn: download_file) {
    doLast{
        file(pathToUnzipFolder.toString()+'/neophyten.csv').withOutputStream { os ->
        os << resources.gzip(pathToDataZip).read()
        }
     }
}

task csvimport(type: CsvImport, dependsOn: unpackFiles){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    schemaName = "alw_infoflora"
    tableName = "neophyten_neophytenstandorte"
    firstLineIsHeader=true
    valueSeparator = ";"
    println "Importiere folgendes file: "+pathToUnzipFolder.toString()+'/neophyten.csv'
    dataFile = file(pathToUnzipFolder.toString()+'/neophyten.csv')
}

task deleteFileOnServer(type:Exec) {

    commandLine 'curl -i -u ' + infofloraUser + ':' + infofloraPwd + ' -k -X DELETE https://obs.infoflora.ch/rest/v4/docs/' + fileid + '.json --header "Content-Type:application/json"'
    println "Deleted file " + filename + " from Server" 

}
