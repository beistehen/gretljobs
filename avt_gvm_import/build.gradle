import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publishPub'


//WICHTIG: Definition des GVM (Jahr)
 
def jahr = '2019'
def InterlisFile = 'SO_AVT_Gesamtverkehrsmodell_2019_20230829.xtf' // Heisst das Data-File wirklich immer so? 


def pathToTempFolder = System.getProperty('java.io.tmpdir')
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
def pathToDataZip = Paths.get(pathToTempFolder, "uploadFile.zip")
def xtfFilePath = Paths.get(pathToUnzipFolder.toString(), InterlisFile)

task copyZipFile(type: Copy) {
    from 'upload/'
    include('uploadFile')
    into pathToTempFolder
    rename('uploadFile', 'uploadFile.zip')
}



task unzipData(type: Copy, dependsOn: 'copyZipFile') {
    description = "Unzip file."
    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }
    from zipTree(pathToDataZip)
    into file(pathToUnzipFolder)
    include "**/*.xtf"
}

task dbImport(type: Ili2pgImport, dependsOn: 'unzipData') {
    description = "Import Geodatato Edit"
    doLast {
        println "Data imported into db: " + dbUriEdit
    }
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = "avt_gesamtverkehrsmodell_"+jahr+"_v1"
    models = "SO_AVT_Gesamtverkehrsmodell_2019_20230829"
    dataFile = file(xtfFilePath)
    deleteData = true
    strokeArcs = true
}

task dbImportPub(type: Ili2pgImport, dependsOn: 'dbImport') {
    description = "Import Geodata to Pub"
    doLast {
        println "Data imported into db: " + dbUriPub
    }
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dbschema = "avt_gesamtverkehrsmodell_"+jahr+"_pub_v1"
    models = "SO_AVT_Gesamtverkehrsmodell_2019_20230829"
    dataFile = file(xtfFilePath)
    deleteData = true
    strokeArcs = true
}

task update_txt_cols(type: SqlExecutor, dependsOn: dbImportPub) {
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlFiles = ['update_dtv_klassen.sql']
}

task publishPub(type: Publisher, dependsOn: update_txt_cols){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.avt.verkehrsmodell."+jahr
    dbSchema = "avt_gesamtverkehrsmodell_"+jahr+"_pub_v1"
    modelsToPublish = "SO_AVT_Gesamtverkehrsmodell_2019_20230829"
    userFormats = true
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}