description = """\n
Migration der MJPNL-Daten von der alten SOGIS-DB in das neue Applikationsschema arp_mjpnl_v1 (EDIT-DB)

Fragen an: Andreas Neumann (AGI) und Odile Bruggisser (ARP)
"""

import ch.so.agi.gretl.tasks.*
import java.nio.file.Files
import java.nio.file.Paths
import java.io.File

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'transfer_mjpnl'

def DB_Schema_MJPNL = "arp_mjpnl_v1"

task "clean_mjpnl_before_import"(type: SqlExecutor) {
    description = "MJPNL Daten in der richtigen Reihenfolge (dependencies) l√∂schen vor dem Neuimport"
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [DB_Schema_MJPNL:DB_Schema_MJPNL]
    sqlFiles = ['delete_mjpnl_before_import.sql']
}

task "transfer_mjpnl"(type: Db2Db,dependsOn: "clean_mjpnl_before_import"){
    description = "Migration MJPNL-Daten aus alter 'sogis' PostgreSQL-Datenbank"
    sourceDb = ['jdbc:postgresql://geodb.verw.rootso.org/sogis', dbUserSogis, dbPwdSogis]
    targetDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    transferSets = [
            new TransferSet('mjpnl_vereinbarung.sql', 'arp_mjpnl_v1.mjpnl_vereinbarung', false)
    ];
}

task "postprocessing_import"(type: SqlExecutor,dependsOn: "transfer_mjpnl") {
    description = "Diverse spatial joins und default-Werte zuweisen."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [DB_Schema_MJPNL:DB_Schema_MJPNL]
    sqlFiles = ['mjpnl_postprocessing_vereinbarungen.sql']
}
